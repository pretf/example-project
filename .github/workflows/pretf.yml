# Inspired by https://github.com/timberio/vector-test-harness-github-actions-test-repo

name: Pretf

on:
  issue_comment:
    types: [created]

jobs:
  github-action:

    runs-on: ubuntu-18.04

    if: |
      github.event_name == 'issue_comment' && github.event.action == 'created'
      && github.event.issue.pull_request != null
      && startsWith(github.event.comment.body, '/')

    steps:
    - name: acknowledge
      uses: actions/github-script@0.9.0
      with:
        github-token: '${{secrets.GITHUB_TOKEN}}'
        script: |
          github.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: "rocket"
          });

    - name: authorize
      uses: lannonbr/repo-permission-check-action@2.0.1
      with:
        permission: write
      env:
        GITHUB_TOKEN: '${{secrets.GITHUB_TOKEN}}'

    - name: debug
      uses: hmarr/debug-action@v1.0.0

    - name: checkout default branch
      uses: actions/checkout@v2

    - name: checkout pull request branch
      run: |
        PULL_REQUEST_REF=$(curl -sS -H 'Accept: application/vnd.github.sailor-v-preview+json' ${{github.event.issue.pull_request.url}} | jq -r .head.ref)
        git fetch --no-tags --prune --depth=1 origin +refs/heads/$PULL_REQUEST_REF*:refs/remotes/origin/$PULL_REQUEST_REF* +refs/tags/$PULL_REQUEST_REF*:refs/tags/$PULL_REQUEST_REF*
        git checkout -b $PULL_REQUEST_REF refs/remotes/origin/$PULL_REQUEST_REF

    - name: write aws credentials
      run: |
        mkdir ~/.aws
        echo "$AWS_CREDENTIALS_FILE_CONTENTS" > ~/.aws/credentials
      env:
        AWS_CREDENTIALS_FILE_CONTENTS: '${{secrets.AWS_CREDENTIALS_FILE_CONTENTS}}'

    - name: pretf github-action
      run: |
        mkdir -p .docker-home && \
        docker run --rm \
          -u $(id -u):$(id -g) \
          -v /etc/passwd:/etc/passwd:ro \
          -v $PWD/.docker-home:$HOME \
          -v $HOME/.aws:$HOME/.aws \
          -w /src \
          -v $PWD:/src \
          -e DEFAULT_BRANCH \
          -e GITHUB_COMMENT \
          $DOCKER_IMAGE \
          $DOCKER_CMD
      env:
        DEFAULT_BRANCH: '${{github.event.repository.default_branch}}'
        GITHUB_COMMENT: '${{github.event.comment.body}}'
        DOCKER_IMAGE: claranet/direnv-asdf:latest
        DOCKER_CMD: pretf github-action

    - name: delete aws credentials
      if: always()
      run: rm -rf ~/.aws

    - name: comment
      if: always()
      uses: actions/github-script@0.9.0
      with:
        github-token: '${{secrets.GITHUB_TOKEN}}'
        script: |
          const fs = require('fs');
          const { promisify } = require('util');
          const readFileAsync = promisify(fs.readFile);

          console.log(process.env);
          console.log(context);

          let output, body;
          try {
            output = await readFileAsync(`${process.env.GITHUB_WORKSPACE}/github-error`);
            body = `Action requested by ${context.payload.comment.html_url} failed!\n\n${output}`;
          } catch {
            try {
              output = await readFileAsync(`${process.env.GITHUB_WORKSPACE}/github-output`);
              body = `Action requested by ${context.payload.comment.html_url} is complete!\n\n${output}`;
            } catch {
              body = `Action requested by ${context.payload.comment.html_url} failed to run!`;
            }
          }
          body = `${body}\n\nYou can check the [execution log](${context.payload.repository.html_url}/actions/runs/${process.env.GITHUB_RUN_ID}) to learn more!`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body
          });
